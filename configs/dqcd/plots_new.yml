FILTER: &FILTER
  
  filter[0]:
    operator: 'cartesian_and'  # null (unary), cartesian_and', 'cartesian_or'
    sets: [0,1]                # input set ids (one or two)
  
  filter[1]:
    operator: null             # null (unary), cartesian_and', 'cartesian_or'
    sets: [2]                  # input set ids (one or two)
  
  # ... more filters here
  
  # --------------------
  
  set[0]:
    expand: 'set'    # 'set', 'vetoset' or 'powerset'
    cutset:
      # Latex description is for boolean [0,1] per cut
      [{cut: 'GEN_mpi == 1  && GEN_mA == 0.33', latex: ['$\neq(m_\pi = 1$  & $m_A = 0.33)$', '$m_\pi = 1$  & $m_A = 0.33$']},
       {cut: 'GEN_mpi == 2  && GEN_mA == 0.67', latex: ['$\neq(m_\pi = 2$  & $m_A = 0.67)$', '$m_\pi = 2$  & $m_A = 0.67$']},
       {cut: 'GEN_mpi == 4  && GEN_mA == 0.40', latex: ['$\neq(m_\pi = 4$  & $m_A = 0.40)$', '$m_\pi = 4$  & $m_A = 0.40$']},
       {cut: 'GEN_mpi == 4  && GEN_mA == 1.33', latex: ['$\neq(m_\pi = 4$  & $m_A = 1.33)$', '$m_\pi = 4$  & $m_A = 1.33$']},
       {cut: 'GEN_mpi == 10 && GEN_mA == 1.00', latex: ['$\neq(m_\pi = 10$ & $m_A = 1.00)$', '$m_\pi = 10$ & $m_A = 1.00$']},
       {cut: 'GEN_mpi == 10 && GEN_mA == 3.33', latex: ['$\neq(m_\pi = 10$ & $m_A = 3.33)$', '$m_\pi = 10$ & $m_A = 3.33$']}]
  
  set[1]:
    expand: 'set'    # 'set', 'vetoset' or 'powerset'
    cutset:
      [{cut: 'GEN_ctau == 0.1', latex: ['$c\tau \neq 0.1$', '$c\tau = 0.1$']},
       {cut: 'GEN_ctau == 1',   latex: ['$c\tau \neq 1$',   '$c\tau = 1$']  },
       {cut: 'GEN_ctau == 10',  latex: ['$c\tau \neq 10$',  '$c\tau = 10$'] },
       {cut: 'GEN_ctau == 100', latex: ['$c\tau \neq 100$', '$c\tau = 100$']}]
  
  set[2]:
    expand: 'set'    # 'set', 'vetoset' or 'powerset'
    cutset:
      [{cut: 'GEN_ctau == 0.1', latex: ['$c\tau \neq 0.1$', '$c\tau = 0.1$']}]
  
  # ... more sets here

# -----------------------------------------------------------------------

basic:
  active: True
  nbins:  70
  percentile_range: [0.5, 99.5]
  exclude_vals: [null, -999.0]
  plot_unweighted: False

corrmat:
  active: False

contours:
  active: False

ROC:
  active: True
  num_bootstrap: 50
  xmin: 1.0E-6
  #set_filter: *FILTER

## Binned ROC plots can be 1D or 2D
ROC_binned:
  active: False
  num_bootstrap: 50
  xmin: 1.0E-4

  plot[0]:
    var:   ['ChsMET_pt']
    edges: [4.0, 6, 8.0, 10.0, 12.0, 15.0, 10000]

  plot[1]:
    var:   ['muonSV_mass_0']
    edges: [0.5, 1.5, 2.5, 3.5, 5.5, 7.0, 10.0, 20.0, 40.0, 80.0]
  
  #plot[2]:
  #  var:   ['GEN_mpi', 'GEN_ctau']
  #  edges: [[1.9, 2.1, 4.9, 5.1, 9.9, 10.1, 14.1, 15.1],
  #          [9, 11, 49, 51, 99, 101]]

## MVA output density (1D)
MVA_output:
  active: True
  edges: 80
  #set_filter: *FILTER

## (MVA output x External variable) density (2D)
MVA_2D:
  active: True
  
  plot[0]:
    #var:  ['.*'] # RegExp supported
    #var:  ['muonSV_mass.*'] # RegExp supported
    var:   ['muonSV_mass_0', 'muonSV_mass_1']
    edges: [{'nbin': 50,  'minmax': [0.0, 1.0],  'space': 'linear'},
            {'nbin': 100, 'minmax': [0.0, 20.0], 'space': 'linear'}]

  #plot[1]:
  #  var:   ['.?hlt_pms2.?'] # RegExp supported
  #  edges: [{'nbin': 50, 'minmax': [0.0, 1.0], 'space': 'linear'},
  #          {'nbin': 50, 'q': [0.0, 0.95],     'space': 'log10'}]
